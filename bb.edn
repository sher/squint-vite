{:tasks
 {dev:copy {:requires ([babashka.fs :as fs]
                       [shadow.esm :as esm]
                       [clojure.edn :as edn]
                       [clojure.string :as str])
            ;; need to ckeck squint.edn exists
            ;; now just assuming it is there
            :task (let [cfg (-> (slurp "squint.edn")
                                (edn/read-string))]
                    (-> (-> (esm/dynamic-import "chokidar")
                            (.catch (fn [err]
                                      (js/console.error err))))
                        (.then (fn [^js lib]
                                 (let [watch (.-watch lib)]
                                   (println "[squint] Watching paths:" (str/join ", " paths))
                                   (doseq [path paths]
                                     (.on ^js (watch path) "all"
                                          (fn [event path]
                                            (when (and (contains? #{"add" "change"} event)
                                                       (contains? #{".cljs" ".cljc"} (path/extname path)))
                                              (-> (compile-files opts [path])
                                                  (.catch (fn [e]
                                                            (js/console.error e)))))))))))))}
  dev:squint (shell "npx squint watch")
  dev:vite (shell "npx vite")
  -dev {:depends [dev:copy dev:squint dev:vite]}
  dev (run '-dev {:parallel true})
  build:squint (shell "npx squint compile")
  build:vite (shell "npx vite build")
  build {:depends [build:squint build:vite]}}}
